1. Homography Fitting
2. Essential Matrix Fitting.
3. Fundamental Matrix fitting.
4. Comments.
5. Fast computation.
6. Samplers.

7. Run homograhpy fittin fon all dataset.

1. Create Makefiles in each folder? No
2. Prosac, shoud have extra termination criteria (maximality and non random inliers)? Skip
3. Evsac, is enough to use Theia implementation (including all Theia libraries which has big
dependencies and slow down compilation)? Skip
4. Napsac Find K Nearest Neighbors for one initial point or for all points. My idea is to
find K nearest neighbors for one, compute maximum iterations by getting SampleNumber from KNN
using formula knn!/(sample_number!*(knn-sample_number)!  and reset KNN after iterations expired.
5. ArrayRandomGenerator and ShuffleRandomGenrator are the best now. They are 100% uniform, have
the fastest GetRandomNumber() and numbers are uniques. Should we use them instead of UniformRandomGenerator?
6. HomographyEstimator: We can implement getInliersCount inside Homography estimator.
GetError function requires multiply point by H, but we can multiply all points at once and calling
GetInlierCount only one time. But for Line2DEstimator it did not speed up the code, by contrast made it twice slower.
7. Verbose mode? Yes
8. Preference to pointer class or to object class? Pointer
9. Something maybe wrong in Homography Fitting.

10. Config File?
11. Inlier ratio?

Abstract Draw class
Abstract Quality class
Abstract LO class
Abstract TerminationCriteria class

Destructors

Add Uniform Random Generator (better than array generator in case to allocate new array for different size)

ArrayGenerator sub intervals;
Avoid set Model parameters.

Float or double??? float



------------------

prosac quality sort
init everything directly ransac



Ask about weights
Count iterations in LO?
Use termination criteria/srpt/gc in LO?


Repeated point?


Inner and Iterative ransac LO is not good for Line fitting.

How sample in Local Optimization (by current sampler or always uniformly)?
